#
# 构建应用
#
FROM alpine:3 AS builder
WORKDIR /home
RUN set -eux && \
  #显示信息
  echo "编译平台：$(uname -a)" && \
  #设置源
  echo "http://mirrors.ustc.edu.cn/alpine/edge/main/" > /etc/apk/repositories && \
  echo "http://mirrors.ustc.edu.cn/alpine/edge/community/" >> /etc/apk/repositories && \
  echo "http://mirrors.ustc.edu.cn/alpine/edge/testing/" >> /etc/apk/repositories && \
  apk update

# RocksDB依赖安装方式1：从源码编译以支持老CPU(不支持sse4_2)
# https://tracker.ceph.com/issues/20529#note-14
RUN set -eux && \
  apk add linux-headers bash perl snappy-dev gflags-dev bzip2-dev lz4-dev zstd-dev zlib-dev build-base wget && \
  wget https://xm.lilu.red:444/soft/rocksdb-6.13.3.tar.gz && \
  tar zxf rocksdb-6.13.3.tar.gz && cd rocksdb-6.13.3 && \
  PORTABLE=1 PREFIX=/usr LIBDIR=/usr/lib make -j32 shared_lib
RUN set -eux && \
  cd rocksdb-6.13.3 && \
  cp librocksdb.so.6.13.3 /usr/lib/ && \
  cp -r include/* /usr/include/ && \
  cd /usr/lib/ && \
  ln -fs librocksdb.so.6.13.3 librocksdb.so.6.13 && \
  ln -fs librocksdb.so.6.13.3 librocksdb.so.6 && \
  ln -fs librocksdb.so.6.13.3 librocksdb.so && \
  cd /home/

#编译Golang
COPY code .
ENV GOPROXY=https://goproxy.cn
RUN set -eux && \
  #安装Golang环境
  apk add go && \
  #下载并校验Golang模块
  go mod download && go mod verify && \
  #编译Golang应用
  go build -o /home/main

################

#
# 封装镜像
#
FROM alpine:3
WORKDIR /home
#从构建阶段中复制RocksDB库
COPY --from=builder /usr/lib/librocksdb.so.6.13 /usr/lib/
#从构建阶段中复制程序
COPY --from=builder /home/main .
#从资源文件夹中复制资源
COPY resource .
RUN set -eux && \
  #设置源
  echo "http://mirrors.ustc.edu.cn/alpine/edge/main/" > /etc/apk/repositories && \
  echo "http://mirrors.ustc.edu.cn/alpine/edge/community/" >> /etc/apk/repositories && \
  echo "http://mirrors.ustc.edu.cn/alpine/edge/testing/" >> /etc/apk/repositories && \
  apk update && \
  \
  #设置时区
  apk add tzdata && \
  cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
  echo "Asia/Shanghai" > /etc/timezone && \
  apk del tzdata && \
  #安装RocksDB库依赖
  apk add --upgrade snappy gflags libbz2 lz4-libs zstd-libs zlib

ENTRYPOINT ["./main"]

ARG PORTS=40000
EXPOSE ${PORTS}